{"ast":null,"code":"import { TodoStatus } from '../models/todo';\nconst GetTodos = () => {\n  const todos = localStorage.getItem(\"todos\");\n  return todos ? JSON.parse(todos) : [];\n};\n_c = GetTodos;\nconst CreateTodo = todo => {\n  const currentTodos = GetTodos();\n  currentTodos.push(todo);\n  localStorage.setItem('todos', JSON.stringify(currentTodos));\n};\n_c2 = CreateTodo;\nconst RemoveTodos = selected_id => {\n  const currentTodos = GetTodos();\n  const newTodos = [];\n  let flag = false;\n  currentTodos.forEach(todo => {\n    if (!selected_id.includes(todo.id)) {\n      newTodos.push(todo);\n    } else {\n      flag = true;\n    }\n  });\n  localStorage.setItem('todos', JSON.stringify(newTodos));\n  return flag ? \"Successfully Deleted!\" : \"Error!\";\n};\n_c3 = RemoveTodos;\nconst UpdateTodoStatus = (todo_id, checked) => {\n  const currentTodos = GetTodos();\n  const index = currentTodos.findIndex(todo => todo.id === todo_id);\n  if (index >= 0) {\n    currentTodos[index].status = checked ? TodoStatus.ACTIVE : TodoStatus.COMPLETED;\n    localStorage.setItem('todos', JSON.stringify(currentTodos));\n    return \"Successfully Updated!\";\n  }\n  return \"Error!\";\n};\n_c4 = UpdateTodoStatus;\nconst ToggleAllStatus = (selected_date, by_date) => {\n  const currentTodos = GetTodos();\n  const newTodos = currentTodos.map(todo => {\n    if (!by_date) {\n      return {\n        ...todo,\n        status: TodoStatus.ACTIVE\n      };\n    }\n    return selected_date === todo.created_date ? {\n      ...todo,\n      status: TodoStatus.ACTIVE\n    } : todo;\n  });\n  localStorage.setItem('todos', JSON.stringify(newTodos));\n  return \"Successfully Toggled!\";\n};\n_c5 = ToggleAllStatus;\nconst editTodoById = (id, new_content) => {\n  const currentTodos = GetTodos();\n  const todoIndex = currentTodos.findIndex(todo => todo.id === id);\n  if (todoIndex >= 0) {\n    currentTodos[todoIndex].content = new_content;\n  }\n  localStorage.setItem('todos', JSON.stringify(currentTodos));\n  return \"Successfully Edited!\";\n};\nexport { GetTodos, CreateTodo, RemoveTodos, UpdateTodoStatus, ToggleAllStatus, editTodoById };\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"GetTodos\");\n$RefreshReg$(_c2, \"CreateTodo\");\n$RefreshReg$(_c3, \"RemoveTodos\");\n$RefreshReg$(_c4, \"UpdateTodoStatus\");\n$RefreshReg$(_c5, \"ToggleAllStatus\");","map":{"version":3,"names":["TodoStatus","GetTodos","todos","localStorage","getItem","JSON","parse","CreateTodo","todo","currentTodos","push","setItem","stringify","RemoveTodos","selected_id","newTodos","flag","forEach","includes","id","UpdateTodoStatus","todo_id","checked","index","findIndex","status","ACTIVE","COMPLETED","ToggleAllStatus","selected_date","by_date","map","created_date","editTodoById","new_content","todoIndex","content"],"sources":["/Users/differwor/Documents/P - Work/redux-saga/project-3/src/utils/LocalService.ts"],"sourcesContent":["import { Todo, TodoStatus } from '../models/todo';\r\n\r\nconst GetTodos = () : Todo[] => {\r\n\tconst todos : any = localStorage.getItem(\"todos\");\r\n\treturn todos ? JSON.parse(todos) : [];\r\n}\r\n\r\nconst CreateTodo = (todo : Todo) : void => {\r\n\tconst currentTodos : Todo[] = GetTodos();\r\n\tcurrentTodos.push(todo);\r\n\tlocalStorage.setItem('todos', JSON.stringify(currentTodos));\r\n}\r\n\r\nconst RemoveTodos = (selected_id : string[]) : string => {\r\n\tconst currentTodos : Todo[] = GetTodos();\r\n\tconst newTodos: Todo[] = [];\r\n\tlet flag: Boolean = false;\r\n\tcurrentTodos.forEach((todo) => {\r\n\t\tif (!selected_id.includes(todo.id)) {\r\n\t\t\tnewTodos.push(todo);\r\n\t\t} else { flag = true }\r\n\t});\r\n\tlocalStorage.setItem('todos', JSON.stringify(newTodos));\r\n\treturn flag ? \"Successfully Deleted!\" : \"Error!\";\r\n}\r\n\r\nconst UpdateTodoStatus = (todo_id: string, checked: Boolean): string => {\r\n\tconst currentTodos : Todo[] = GetTodos();\r\n\tconst index = currentTodos.findIndex(todo => todo.id === todo_id);\r\n\tif (index >= 0) {\r\n\t\tcurrentTodos[index].status = checked ? TodoStatus.ACTIVE : TodoStatus.COMPLETED;\r\n\t\tlocalStorage.setItem('todos', JSON.stringify(currentTodos));\r\n\t\treturn \"Successfully Updated!\";\r\n\t}\r\n\treturn \"Error!\";\r\n}\r\n\r\nconst ToggleAllStatus = (selected_date: string, by_date: boolean | undefined): string => {\r\n\tconst currentTodos : Todo[] = GetTodos();\r\n\tconst newTodos = currentTodos.map(todo => {\r\n\t\tif ( !by_date ) {\r\n\t\t\treturn {\r\n\t\t\t\t...todo,\r\n\t\t\t\tstatus: TodoStatus.ACTIVE\r\n\t\t\t} \r\n\t\t}\r\n\t\treturn selected_date === todo.created_date ? {...todo, status: TodoStatus.ACTIVE} : todo\r\n\t})\r\n\tlocalStorage.setItem('todos', JSON.stringify(newTodos));\r\n\treturn \"Successfully Toggled!\";\r\n}\r\n\r\nconst editTodoById = (id: string, new_content: string): string => {\r\n\tconst currentTodos : Todo[] = GetTodos();\r\n\tconst todoIndex = currentTodos.findIndex(todo => todo.id === id); \r\n\tif (todoIndex >= 0) {\r\n\t\tcurrentTodos[todoIndex].content = new_content;\r\n\t} \r\n\tlocalStorage.setItem('todos', JSON.stringify(currentTodos));\r\n\treturn \"Successfully Edited!\";\r\n}\r\n\r\nexport {GetTodos, CreateTodo, RemoveTodos, UpdateTodoStatus, ToggleAllStatus, editTodoById}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}