{"ast":null,"code":"import shortid from \"shortid\";\nimport { TodoStatus } from \"../models/todo\";\nimport { CreateTodo, GetTodos, RemoveTodos, UpdateTodoStatus, ToggleAllStatus, editTodoById } from \"../utils/LocalService\";\nimport { IAPI } from \"./types\";\n\n// mock api\nclass ApiFrontend extends IAPI {\n  async createTodoService(content, created_date) {\n    const newTodo = {\n      content: content,\n      created_date: created_date,\n      //2022-12-31\n      status: TodoStatus.ACTIVE,\n      id: shortid()\n    };\n    CreateTodo(newTodo);\n    return Promise.resolve(newTodo);\n  }\n  async getTodosService() {\n    const todos = GetTodos();\n    return Promise.resolve(todos);\n  }\n  async deleteTodosService(selected_id) {\n    const message = RemoveTodos(selected_id);\n    return Promise.resolve(message);\n  }\n  async updateTodoStatusService(todo_id, checked) {\n    const message = UpdateTodoStatus(todo_id, checked);\n    return Promise.resolve(message);\n  }\n  async toggleAllStatusService(selected_date, by_date) {\n    const message = ToggleAllStatus(selected_date, by_date);\n    return Promise.resolve(message);\n  }\n  async editTodoContent(id, new_content) {\n    const message = editTodoById(id, new_content);\n    return Promise.resolve(message);\n  }\n}\nexport default new ApiFrontend();","map":{"version":3,"names":["shortid","TodoStatus","CreateTodo","GetTodos","RemoveTodos","UpdateTodoStatus","ToggleAllStatus","editTodoById","IAPI","ApiFrontend","createTodoService","content","created_date","newTodo","status","ACTIVE","id","Promise","resolve","getTodosService","todos","deleteTodosService","selected_id","message","updateTodoStatusService","todo_id","checked","toggleAllStatusService","selected_date","by_date","editTodoContent","new_content"],"sources":["/Users/differwor/Documents/P - Work/redux-saga/project-3/src/service/api-frontend.ts"],"sourcesContent":["import shortid from \"shortid\"; \r\nimport { Todo, TodoStatus } from \"../models/todo\";\r\nimport { CreateTodo, GetTodos, RemoveTodos, UpdateTodoStatus, ToggleAllStatus, editTodoById } from \"../utils/LocalService\";\r\nimport { IAPI } from \"./types\";\r\n\r\n// mock api\r\nclass ApiFrontend extends IAPI {\r\n\tasync createTodoService(content: string, created_date: string): Promise<Todo> {\r\n\t\tconst newTodo = {\r\n\t\t\tcontent: content,\r\n\t\t\tcreated_date: created_date, //2022-12-31\r\n\t\t\tstatus: TodoStatus.ACTIVE,\r\n\t\t\tid: shortid()\r\n\t \t} as Todo;\r\n\t\tCreateTodo(newTodo);\r\n\t\treturn Promise.resolve(newTodo);\r\n\t}\r\n\r\n\tasync getTodosService(): Promise<Todo[]> {\r\n\t\tconst todos: Todo[] = GetTodos();\r\n\t\treturn Promise.resolve(todos);\r\n\t}\r\n\r\n\tasync deleteTodosService(selected_id: string[]): Promise<string> {\r\n\t\tconst message = RemoveTodos(selected_id);\r\n\t\treturn Promise.resolve(message);\r\n\t}\r\n\r\n\tasync updateTodoStatusService(todo_id: string, checked: Boolean): Promise<string> {\r\n\t\tconst message = UpdateTodoStatus(todo_id, checked);\r\n\t\treturn Promise.resolve(message);\r\n\t}\r\n\r\n\tasync toggleAllStatusService(selected_date: string, by_date: boolean | undefined): Promise<string> {\r\n\t\tconst message = ToggleAllStatus(selected_date, by_date);\r\n\t\treturn Promise.resolve(message);\r\n\t}\r\n\r\n\tasync editTodoContent(id: string, new_content: string): Promise<string> {\r\n\t\tconst message = editTodoById(id, new_content);\r\n\t\treturn Promise.resolve(message);\r\n\t}\r\n}\r\n\r\nexport default new ApiFrontend();"],"mappings":"AAAA,OAAOA,OAAO,MAAM,SAAS;AAC7B,SAAeC,UAAU,QAAQ,gBAAgB;AACjD,SAASC,UAAU,EAAEC,QAAQ,EAAEC,WAAW,EAAEC,gBAAgB,EAAEC,eAAe,EAAEC,YAAY,QAAQ,uBAAuB;AAC1H,SAASC,IAAI,QAAQ,SAAS;;AAE9B;AACA,MAAMC,WAAW,SAASD,IAAI,CAAC;EAC9B,MAAME,iBAAiB,CAACC,OAAe,EAAEC,YAAoB,EAAiB;IAC7E,MAAMC,OAAO,GAAG;MACfF,OAAO,EAAEA,OAAO;MAChBC,YAAY,EAAEA,YAAY;MAAE;MAC5BE,MAAM,EAAEb,UAAU,CAACc,MAAM;MACzBC,EAAE,EAAEhB,OAAO;IACX,CAAS;IACVE,UAAU,CAACW,OAAO,CAAC;IACnB,OAAOI,OAAO,CAACC,OAAO,CAACL,OAAO,CAAC;EAChC;EAEA,MAAMM,eAAe,GAAoB;IACxC,MAAMC,KAAa,GAAGjB,QAAQ,EAAE;IAChC,OAAOc,OAAO,CAACC,OAAO,CAACE,KAAK,CAAC;EAC9B;EAEA,MAAMC,kBAAkB,CAACC,WAAqB,EAAmB;IAChE,MAAMC,OAAO,GAAGnB,WAAW,CAACkB,WAAW,CAAC;IACxC,OAAOL,OAAO,CAACC,OAAO,CAACK,OAAO,CAAC;EAChC;EAEA,MAAMC,uBAAuB,CAACC,OAAe,EAAEC,OAAgB,EAAmB;IACjF,MAAMH,OAAO,GAAGlB,gBAAgB,CAACoB,OAAO,EAAEC,OAAO,CAAC;IAClD,OAAOT,OAAO,CAACC,OAAO,CAACK,OAAO,CAAC;EAChC;EAEA,MAAMI,sBAAsB,CAACC,aAAqB,EAAEC,OAA4B,EAAmB;IAClG,MAAMN,OAAO,GAAGjB,eAAe,CAACsB,aAAa,EAAEC,OAAO,CAAC;IACvD,OAAOZ,OAAO,CAACC,OAAO,CAACK,OAAO,CAAC;EAChC;EAEA,MAAMO,eAAe,CAACd,EAAU,EAAEe,WAAmB,EAAmB;IACvE,MAAMR,OAAO,GAAGhB,YAAY,CAACS,EAAE,EAAEe,WAAW,CAAC;IAC7C,OAAOd,OAAO,CAACC,OAAO,CAACK,OAAO,CAAC;EAChC;AACD;AAEA,eAAe,IAAId,WAAW,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}