{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport todosReducer from '../container/Client/TodoList/module/todosSlice';\nimport createSagaMiddleware from 'redux-saga';\nimport RootSaga from '../sagas/sagas/rootSaga';\nconst sagaMiddleware = createSagaMiddleware();\nconst store = configureStore({\n  reducer: {\n    todos: todosReducer\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: false,\n    thunk: false\n  }).concat(sagaMiddleware)\n});\nsagaMiddleware.run(RootSaga);\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\n\nexport default store;","map":{"version":3,"names":["configureStore","todosReducer","createSagaMiddleware","RootSaga","sagaMiddleware","store","reducer","todos","middleware","getDefaultMiddleware","serializableCheck","thunk","concat","run"],"sources":["/Users/differwor/Documents/P - Work/redux-saga/project-3/src/app/store.ts"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit'\r\nimport todosReducer from '../container/Client/TodoList/module/todosSlice'\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport RootSaga from '../sagas/sagas/rootSaga';\r\n\r\nconst sagaMiddleware = createSagaMiddleware()\r\nconst store = configureStore({\r\n  reducer: {\r\n    todos: todosReducer\r\n  },\r\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware({\r\n    serializableCheck: false,\r\n    thunk: false\r\n  }).concat(sagaMiddleware)\r\n})\r\n\r\nsagaMiddleware.run(RootSaga);\r\n\r\n// Infer the `RootState` and `AppDispatch` types from the store itself\r\nexport type RootState = ReturnType<typeof store.getState>\r\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\r\nexport type AppDispatch = typeof store.dispatch\r\n\r\nexport default store;"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,YAAY,MAAM,gDAAgD;AACzE,OAAOC,oBAAoB,MAAM,YAAY;AAC7C,OAAOC,QAAQ,MAAM,yBAAyB;AAE9C,MAAMC,cAAc,GAAGF,oBAAoB,EAAE;AAC7C,MAAMG,KAAK,GAAGL,cAAc,CAAC;EAC3BM,OAAO,EAAE;IACPC,KAAK,EAAEN;EACT,CAAC;EACDO,UAAU,EAAGC,oBAAoB,IAAKA,oBAAoB,CAAC;IACzDC,iBAAiB,EAAE,KAAK;IACxBC,KAAK,EAAE;EACT,CAAC,CAAC,CAACC,MAAM,CAACR,cAAc;AAC1B,CAAC,CAAC;AAEFA,cAAc,CAACS,GAAG,CAACV,QAAQ,CAAC;;AAE5B;;AAKA,eAAeE,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}